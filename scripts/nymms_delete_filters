#!/usr/bin/env python

__doc__ = """CLI tool for marking reactor suppression as inactive"""

import boto.sdb
from nymms.suppress.sdb_suppress import SDBSuppressFilterBackend
from nymms.suppress.cli import SuppressCLI
import argparse
import time
import logging
import sys


logger = logging.getLogger(__name__)
parser = argparse.ArgumentParser(__doc__)
cli = SuppressCLI(parser)
parser.add_argument('-k', '--key', dest='rowkey',
        help='rowkey of filter to deactivate')
parser.add_argument('--delete-all-filters', dest='delete_all_filters',
        help='Delete all the filters', action='store_true')
values = cli.values()

conn = boto.sdb.connect_to_region(cli.region)
filter_backend = SDBSuppressFilterBackend(conn, cli.domain)
if values.delete_all_filters:
    print "Deleting all filters!"
    print "Press CTRL-C to abort!"
    for x in reversed(range(1, 6)):
        sys.stdout.write("%d. " % (x,))
        sys.stdout.flush()
        time.sleep(1)
    print ""
    filter_backend.delete_all_filters()
elif values.rowkey:
    print "Deactivating %s" % (values.rowkey,)
    filter_backend.deactivate_filter(values.rowkey)
else:
    print "Please provide a --key or --delete-all-filters"
    exit(-1)
