#!/usr/bin/env python

__doc__ = """CLI tool for marking reactor suppression as inactive"""

from nymms.config import config
import boto.sdb 
from nymms.filter.sdb_filter import SDBSuppressFilterBackend
import argparse
import time
import logging
import sys

if __name__ == '__main__':
    logger = logging.getLogger(__name__)
    parser = argparse.ArgumentParser(__doc__)
    parser.add_argument('-c', '--config', dest='config', default='/etc/nymms/config.yaml',
            help='NYMMS config file')
    parser.add_argument('-r', '--region', dest='region',
            help='Override config AWS region to connect to')
    parser.add_argument('-d', '--domain', dest='domain', default='reactor_suppress',
            help='Override config AWS SDB Domain to use')
    parser.add_argument('-k', '--key', dest='rowkey',
            help='rowkey of filter to deactivate')
    parser.add_argument('--delete-all-filters', dest='delete_all_filters',
            help='Delete all the filters', action='store_true')
    values = parser.parse_args()

    try:
        config.load_config(values.config)
        region = config.settings['region']
        domain = config.settings['suppress']['domain']
    except:
        # there may not be a config file or it might be old
        pass

    if values.region:
        region = values.region
    if values.domain:
        domain = values.domain

    conn = boto.sdb.connect_to_region(region)
    filter_backend = SDBSuppressFilterBackend(conn, domain)
    if values.delete_all_filters:
        print "Deleting all filters!"
        print "Press CTRL-C to abort!"
        for x in reversed(range(1,6)):
            sys.stdout.write("%d. " % (x,))
            sys.stdout.flush()
            time.sleep(1)
        print ""
        filter_backend.delete_all_filters()
    elif values.rowkey:
        print "Deactivating %s" % (values.rowkey,)
        filter_backend.deactivate_filter(values.rowkey)
    else:
        print "Please provide a --key or --delete-all-filters"
        exit(-1)
