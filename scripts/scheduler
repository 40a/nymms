#!/usr/bin/env python

import argparse
import sys

from nymms.utils import logutil
from nymms.config import yaml_config
from nymms import scheduler
from nymms.queue.backends.sns_sqs import SNSTopic, SQSQueue

from boto import sns
from boto import sqs

parser = argparse.ArgumentParser(description='nymms scheduler daemon')
parser.add_argument('-c', '--config', dest='config', default='config.yaml',
        help="Path to the config file.  Default: %(default)s")

arg_manager = parser.parse_args()

logger = logutil.setup_logging(tag_name='scheduler', verbose=True, stdout=True,
        syslog=False)
logutil.quiet_boto_logging()

try:
    main_config = yaml_config.load_config(arg_manager.config)
except yaml_config.EmptyConfig, e:
    logger.critical("Unable to load a valid config.  Exiting.")
    sys.exit(1)
       
scheduler_config = main_config.get('scheduler', {})

aws_region = main_config['queue_region']
sns_conn = sns.connect_to_region(aws_region)
sqs_conn = sqs.connect_to_region(aws_region)

topic = SNSTopic(sns_conn, main_config['queue_name'])
queue = SQSQueue(sqs_conn, main_config['topic_name'])

node_config = scheduler_config.get('node_config', 'nodes.yaml')

node_backend = scheduler.YamlNodeBackend(node_config)

s = scheduler.Scheduler(node_backend, topic, queue)

s.run(interval=scheduler_config.get('interval', 300))
