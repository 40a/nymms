#!/usr/bin/env python

__doc__ = """CLI tool to report on reactor suppression filters."""

import boto.sdb
from nymms.suppress.sdb_suppress import SDBSuppressFilterBackend
from nymms.suppress.cli import SuppressCLI
import argparse
import time
import logging


logger = logging.getLogger(__name__)
parser = argparse.ArgumentParser(__doc__)
cli = SuppressCLI(parser)
parser.add_argument('-t', '--time', dest='time',
        help='YYYMMDDHHMMSS or -XXX[smhd] time', default='0')
parser.add_argument('-f', '--format', dest='format',
        help='Output format', choices=('csv', 'pretty'), default='pretty')
parser.add_argument('-a', '--all', dest='show_all', action='store_true',
        help='Show all matching filters, even inactive ones')

values = cli.values()
expire = cli.parse_time(values.time)
expire_time = time.gmtime(expire)
logger.debug("Searching for filters active for %s",
        time.strftime("%Y-%m-%d %H:%M:%S", expire_time))

conn = boto.sdb.connect_to_region(cli.region)

suppress = SDBSuppressFilterBackend(conn, cli.domain)
filters = suppress.get_filters(expire, not values.show_all)
if values.format == 'csv':
    print "regex,created_at,expires,userid,ipaddr,comment"

for item in filters:
    expires = time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime(item.expires))
    created_at = time.strftime("%Y-%m-%d %H:%M:%S",
            time.gmtime(item.created_at))
    if values.format == 'pretty':
        print "regex: '%s'\n\tcreated at: %s (%d)\t\texpires: %s (%d)" % (
            item.regex, created_at, item.created_at, expires, item.expires)
        print "\tcreated by: %s\tipaddr: %s\n\tcomment: %s" % (
            item.userid, item.ipaddr, item.comment)
        if (item.active == 'True'):
            print "\trowkey: %s\t\tactive: %s\n" % (item.rowkey, item.active)
        else:
            print "\trowkey: %s\t\tdeactivated at: %s\n" % (item.rowkey,
                    item.active)

    elif values.format == 'csv':
        print "%s,%d,%d,%s,%s,%s,%s,%s" % (item.regex, item.created_at,
                item.expires, item.userid, item.ipaddr, item.comment,
                item.rowkey, item.active)
