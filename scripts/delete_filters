#!/usr/bin/env python

__doc__ = """CLI tool for marking reactor suppression as inactive"""

import boto.sdb 
from nymms.filter.sdb_filter import SDBSuppressFilterBackend
import argparse
import time
import logging
import sys

if __name__ == '__main__':
    logger = logging.getLogger(__name__)
    parser = argparse.ArgumentParser(__doc__)
    parser.add_argument('-r', '--region', dest='region',
            help='AWS region to connect to', required=True)
    parser.add_argument('-k', '--key', dest='rowkey',
            help='rowkey of filter to deactivate')
    parser.add_argument('--delete-all-filters', dest='delete_all_filters',
            help='Delete all the filters', action='store_true')
    values = parser.parse_args()

    conn = boto.sdb.connect_to_region(values.region)
    filter_backend = SDBSuppressFilterBackend(conn)
    if values.delete_all_filters:
        print "Deleting all filters!"
        print "Press CTRL-C to abort!"
        time.sleep(5)
        filter_backend.delete_all_filters()
    elif values.rowkey:
        print "Deactivating %s" % (values.rowkey,)
        filter_backend.deactivate_filter(values.rowkey)
    else:
        print "Please provide a --key or --delete_all_filters"
        exit(-1)
